# Generated by Django 3.2.8 on 2023-01-14 15:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pan.models
import pan.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=128, verbose_name='username')),
                ('ipaddress', models.GenericIPAddressField(verbose_name='ip address')),
                ('browser', models.CharField(max_length=200, verbose_name='browser')),
                ('os', models.CharField(max_length=30, verbose_name='operating system')),
                ('action', models.CharField(choices=[('0', 'log in'), ('1', 'sign out'), ('2', 'login failed')], max_length=1, verbose_name='action')),
                ('msg', models.CharField(max_length=100, verbose_name='information')),
                ('auth_time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
            ],
            options={
                'verbose_name': 'User authentication log',
                'verbose_name_plural': 'User authentication log',
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('type_name', models.CharField(max_length=50, verbose_name='type name')),
                ('suffix', models.CharField(blank=True, max_length=10, unique=True, verbose_name='file extension')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'file type',
                'verbose_name_plural': 'file type',
            },
        ),
        migrations.CreateModel(
            name='GenericFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('file_name', models.CharField(max_length=100, verbose_name='type name')),
                ('file_uuid', models.UUIDField(default=pan.utils.get_uuid, unique=True, verbose_name='file no')),
                ('file_size', models.BigIntegerField(default=0, verbose_name='file size (bytes)')),
                ('file_path', models.CharField(db_index=True, max_length=500, verbose_name='file path')),
                ('is_del', models.BooleanField(default=False, verbose_name='recycling')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='files', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('file_type', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_file_type), related_name='files', to='pan.filetype', verbose_name='file type')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='pan.genericfile', to_field='file_uuid', verbose_name='parent directory')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'Files and folders',
                'verbose_name_plural': 'Files and folders',
            },
        ),
        migrations.CreateModel(
            name='Limit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('limit_name', models.CharField(max_length=50, verbose_name='restriction name')),
                ('limit_key', models.CharField(max_length=50, unique=True, verbose_name='restricted characters')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'limit',
                'verbose_name_plural': 'limit',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('role_name', models.CharField(max_length=50, verbose_name='role name')),
                ('role_key', models.CharField(max_length=50, unique=True, verbose_name='role character')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'role',
            },
        ),
        migrations.CreateModel(
            name='RoleLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('value', models.BigIntegerField(verbose_name='value')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pan.limit', verbose_name='限制')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pan.role', verbose_name='role')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'role limit',
                'verbose_name_plural': 'role limit',
            },
        ),
        migrations.CreateModel(
            name='RecycleFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('recycle_path', models.CharField(max_length=500, verbose_name='recycling path')),
                ('origin_path', models.CharField(max_length=500, verbose_name='recycling path')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='recycle_files', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('origin', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recycle_file', to='pan.genericfile', to_field='file_uuid', verbose_name='source file')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'recycling files',
                'verbose_name_plural': 'recycling files',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('avatar', models.ImageField(default='default/user.svg', upload_to=pan.utils.get_unique_filename, verbose_name='avatar')),
                ('gender', models.CharField(blank=True, choices=[('0', 'female'), ('1', 'male')], max_length=1, verbose_name='gender')),
                ('role', models.ForeignKey(on_delete=models.SET(pan.models.get_deleted_role), to='pan.role', verbose_name='role')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profile',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('content', models.TextField(verbose_name='notification content')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('action', models.CharField(choices=[('0', 'message'), ('1', 'apply')], max_length=1, verbose_name='type')),
                ('status', models.CharField(choices=[('0', 'unapproved'), ('1', 'pass'), ('2', 'not pass')], default='0', max_length=1, verbose_name='state')),
                ('content', models.TextField(verbose_name='content')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='letters', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'Leave a message and apply',
                'verbose_name_plural': 'Leave a message and apply',
            },
        ),
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('secret_key', models.CharField(db_index=True, max_length=10, verbose_name='share key')),
                ('signature', models.CharField(max_length=70, verbose_name='digital signature')),
                ('expire_time', models.DateTimeField(verbose_name='expiration')),
                ('summary', models.CharField(blank=True, max_length=100, verbose_name='share additional description')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pan.genericfile', to_field='file_uuid', verbose_name='file')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'file sharing',
                'verbose_name_plural': 'file sharing',
            },
        ),
        migrations.CreateModel(
            name='AcceptRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='update time')),
                ('remark', models.TextField(blank=True, verbose_name='remark')),
                ('anonymous', models.GenericIPAddressField(blank=True, null=True, verbose_name='anonymous user')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='accept_records', to=settings.AUTH_USER_MODEL, verbose_name='receiver')),
                ('file_share', models.ForeignKey(on_delete=models.SET(pan.models.get_deleted_file_share), to='pan.fileshare', verbose_name='file sharing')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(pan.models.get_deleted_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updater')),
            ],
            options={
                'verbose_name': 'document receiving record',
                'verbose_name_plural': 'document receiving record',
            },
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
            ],
            options={
                'verbose_name': 'apply',
                'verbose_name_plural': 'apply',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('pan.letter',),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'file',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('pan.genericfile',),
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
            ],
            options={
                'verbose_name': 'folder',
                'verbose_name_plural': 'folder',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('pan.genericfile',),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'message',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('pan.letter',),
        ),
    ]
